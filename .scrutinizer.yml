filter:
    excluded_paths: [ 'tests/*' ]

tools:
    php_code_sniffer:
        config: { standard: WordPress }

    php_changetracking:
        enabled: true
        bug_patterns:
            - '\bfix(?:es|ed)?\b'
        feature_patterns:
            - '\badd(?:s|ed)?\b'
            - '\bimplement(?:s|ed)?\b'

    external_code_coverage:
        timeout: 7200    # Timeout in seconds.

    js_hint: true

    php_mess_detector:
        config:
            naming_rules: { boolean_method_name: true }
            controversial_rules: { superglobals: false }

    sensiolabs_security_checker: true

    php_loc: true

    php_hhvm:
        enabled: true
        command: hhvm
        extensions:
            - php

    php_analyzer:
        enabled: true
        extensions:
              - php
        config:
            parameter_reference_check: { enabled: false }
            checkstyle: { enabled: false }
            unreachable_code: { enabled: true }
            check_access_control: { enabled: false }
            typo_checks: { enabled: true }
            check_variables: { enabled: true }
            check_calls: { enabled: true, too_many_arguments: true, missing_argument: true, argument_type_checks: lenient }
            suspicious_code: { enabled: true, non_existent_class_in_instanceof_check: true, non_existent_class_in_catch_clause: true, non_commented_switch_fallthrough: true, non_commented_empty_catch_block: true, precedence_in_condition_assignment: true, overriding_parameter: false, overriding_closure_use: false, parameter_closure_use_conflict: false, parameter_multiple_times: false, assignment_of_null_return: false, overriding_private_members: false, use_statement_alias_conflict: false }
            dead_assignments: { enabled: true }
            verify_php_doc_comments: { enabled: true, parameters: true, return: true, suggest_more_specific_types: true, ask_for_return_if_not_inferrable: true, ask_for_param_type_annotation: true }
            loops_must_use_braces: { enabled: false }
            check_usage_context: { enabled: true, foreach: { value_as_reference: true, traversable: true } }
            simplify_boolean_return: { enabled: true }
            phpunit_checks: { enabled: false }
            reflection_checks: { enabled: false }
            precedence_checks: { enabled: true, assignment_in_condition: true, comparison_of_bit_result: true }
            basic_semantic_checks: { enabled: true }
            unused_code: { enabled: true }
            deprecation_checks: { enabled: true }
            useless_function_calls: { enabled: true }
            metrics_lack_of_cohesion_methods: { enabled: true }
            metrics_coupling: { enabled: true, stable_code: { namespace_prefixes: {  }, classes: {  } } }
            doctrine_parameter_binding: { enabled: false }
            doctrine_entity_manager_injection: { enabled: false }
            symfony_request_injection: { enabled: false }
            doc_comment_fixes: { enabled: false }
            reflection_fixes: { enabled: false }
            use_statement_fixes: { enabled: true, remove_unused: true, preserve_multiple: false, preserve_blanklines: false, order_alphabetically: false }

    # PHP Similarity Analyzer and Copy/paste Detector cannot be used at
    # the same time right now. Make sure to either remove, or disable one.
    php_cpd: false

    php_pdepend: true

    php_sim:
            enabled: true
            min_mass: 50

checks:
    php:
        code_rating: true
        duplication: true